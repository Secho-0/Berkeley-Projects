Python provides a variety of methods for justifying and centering text.
	•	The center, ljust, and rjust methods take a single argument that specifies the length of the output string within which to center, left-justify, or right-justify, respectively, the string upon which the method is being invoked.
	•	The lstrip and rstrip methods return a string that is like the one upon which the method is invoked but without any leading (lstrip) or trailing (rstrip) whitespace; the strip method removes both leading and trailing whitespace.
Note that these methods, like all of the string methods, do not change the string upon which they are invoked. If the goal is to actually change that string, the output from the method should be reassigned to the original string object.
>>> text = 'This is a title'
>>> text.center(25)
'     This is a title     '
>>> text
'This is a title'
>>> text = text.center(25)
>>> text
'     This is a title     ' 
You can create strings with modified case by using the capitalize, lower, swapcase, title, and upper methods. For example, the capitalize method returns a string whose first character is uppercase, while all the remaining characters are lowercase. The title method capitalizes each word in the string upon which it's invoked. The other functions have their obvious meanings.
Finally, Python offers a variety of so-called predicate methods, which take no arguments and return 1 if all the characters in a string are of a particular type -- 0 otherwise.
Method
Checks for Character Type
isalnum
Alphanumeric (alphabetic or digit)
isalpha
Alphabetic
isdigit
Digit (0 through 9)
isspace
Whitespace characters (space, tab, newline, etc.)
islower
Lowercase
isupper
Uppercase
istitle
Titlecase
